package base

import "fmt"

func ExampleArithOperations() {
	// Значения, которые участвуют в операции, называются операндами.

	// СЛОЖЕНИЕ
	var a = 4
	var b = 6
	var c = a + b
	fmt.Println(c) // 10

	// ВЫЧИТАНИЕ
	var d = 4
	var e = 6
	var f = d - e
	fmt.Println(f) // -2

	// УМНОЖЕНИЕ
	var g = 4
	var h = 6
	var i = g * h
	fmt.Println(i) // 24

	// ДЕЛЕНИЕ
	var a2 int = 10
	var b2 int = 4
	var c2 int = a2 / b2
	fmt.Println(c2) // 2

	var k float32 = 10
	var l float32 = 4
	var m float32 = k / l
	fmt.Println(m) // 2.5

	//          _
	//         / \
	//         | |
	//         | |
	//         | |
	//         \ /
	//          _
	//         | |
	//         --
	//
	// ЕСЛИ ДЕЛИТЬ ЦЕЛОЕ НА ЦЕЛОЕ, ТО И ПОЛУЧИМ ЦЕЛОЕ!
	// с отбрасывание остатка
	//
	var m1 float32 = 10 / 4 // 2

	// но если один из операндов - вещественное число, то и результат будет вещественным
	var m2 float32 = 10 / 4.0 // 2.5

	fmt.Println(m1, m2)

	//
	//   %
	//
	//  Возвращает остаток от деления (в этой операции могут принимать участие
	//  только целочисленные операнды):

	var c1 int = 35 % 3 // 2 (35 - 33 = 2)
	fmt.Println(c1)

	// Постфиксный инкремент (x++). Увеличивает значение переменной на единицу:
	var x int = 8
	x++
	fmt.Println(x) // 9

	// Постфиксный декремент (x--). Уменьшает значение переменной на единицу:
	var y int = 8
	y--
	fmt.Println(y) // 7
}

// НА 4 ФАЙЛА КОНСПЕКТ (ОТ НАЧАЛА ДО СЕГО МОМЕНТА)
// ЗАТРАЧЕНО 1 ЧАС 26 МИНУТ
